# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.
[OSEv3:children]
masters
etcd
nodes
{% if install_nfs %}
nfs
{% endif %}
{% if install_lb and install_ha %}
lb
{% endif %}

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
ansible_ssh_user=root
deployment_type=openshift-enterprise
use_cluster_metrics=true
openshift_release=v{{ openshift_version }}
{% if install_ha %}
openshift_master_cluster_method=native
openshift_master_cluster_hostname=loadbalancer1.example.com
openshift_master_cluster_public_hostname=loadbalancer1-{{ guid }}.oslab.opentlc.com
{% endif %}
#os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
# Configure metricsPublicURL in the master config for cluster metrics
# See: https://docs.openshift.com/enterprise/latest/install_config/cluster_metrics.html
{% if install_metrics %}
openshift_master_metrics_public_url=https://metrics.cloudapps-{{ guid }}.oslab.opentlc.com/hawkular/metrics
{% else %}
# openshift_master_metrics_public_url=https://metrics.cloudapps-{{ guid }}.oslab.opentlc.com/hawkular/metrics
{% endif %}

# Configure loggingPublicURL in the master config for aggregate logging
# See: https://docs.openshift.com/enterprise/latest/install_config/aggregate_logging.html
{% if install_logging %}
openshift_master_logging_public_url=https://kibana.cloudapps-{{ guid }}.oslab.opentlc.com
{% else %}
#openshift_master_logging_public_url=https://kibana.cloudapps-{{ guid }}.oslab.opentlc.com
{% endif %}

{% if use_idm %}
openshift_master_identity_providers=[{'name': 'idm', 'challenge': 'true', 'login': 'true', 'kind': 'LDAPPasswordIdentityProvider', 'attributes': {'id': ['dn'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['uid']}, 'bindDN': 'uid=admin,cn=users,cn=accounts,dc=example,dc=com', 'bindPassword': 'r3dh4t1!', 'ca': '/etc/origin/master/ipa-ca.crt', 'insecure': 'false', 'url': 'ldap://idm.example.com/cn=users,cn=accounts,dc=example,dc=com?uid?sub?(memberOf=cn=ose-users,cn=groups,cn=accounts,dc=example,dc=com)'}]
{% else %}
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/openshift-passwd'}]
{% endif %}

# default project node selector
osm_default_node_selector='region=primary'
openshift_hosted_router_selector='env=infra'
openshift_hosted_router_replicas=1
#openshift_hosted_router_certificate={"certfile": "/path/to/router.crt", "keyfile": "/path/to/router.key", "cafile": "/path/to/router-ca.crt"}
openshift_hosted_registry_selector='env=infra'
openshift_hosted_registry_replicas=1

openshift_master_default_subdomain=cloudapps-{{ guid }}.oslab.opentlc.com

#openshift_use_dnsmasq=False
#openshift_node_dnsmasq_additional_config_file=/home/bob/ose-dnsmasq.conf
{% if install_nfs %}
openshift_hosted_registry_storage_kind=nfs
openshift_hosted_registry_storage_access_modes=['ReadWriteMany']
openshift_hosted_registry_storage_host=oselab.example.com
openshift_hosted_registry_storage_nfs_directory=/srv/nfs
openshift_hosted_registry_storage_volume_name=registry
openshift_hosted_registry_storage_volume_size=10Gi
{% endif %}

{% if install_nfs %}
[nfs]
oselab.example.com
{% endif %}

{% if install_lb and install_ha%}
# Specify load balancer host
[lb]
loadbalancer1.example.com
{% endif %}

# host group for masters
[masters]
{% if install_ha %}
master1.example.com
master2.example.com
master3.example.com
{% else %}
master1.example.com
{% endif %}


# host group for etcd
[etcd]
{% if install_ha %}
master1.example.com
master2.example.com
master3.example.com
{% else %}
master1.example.com
{% endif %}

# host group for nodes, includes region info
[nodes]
# If use HA environment we need to make a loop for all masters, nodes and infranodes
{% if install_ha %}
{% for m in range(1, 3) %}
master{{ m }}.example.com openshift_hostname="master{{ m }}.example.com" openshift_schedulable=False
{% endfor %}

{% for i in range(1, 3) %}
infranode{{ i }}.example.com openshift_hostname="infranode{{ i }}.example.com" openshift_node_labels="{'region': 'primary', 'zone': 'default', 'env': 'infra'}"
{% endfor %}

{% for n in range(1, 3) %}
node{{ n }}.example.com openshift_hostname="node{{ n }}.example.com" openshift_node_labels="{'region': 'primary', 'zone': 'one', 'env': 'dev'}"
{% endfor %}

{% for n in range(3, 5) %}
node{{ n }}.example.com openshift_hostname="node{{ n }}.example.com" openshift_node_labels="{'region': 'primary', 'zone': 'two', 'env': 'dev'}"
{% endfor %}

{% for n in range(5, 7) %}
node{{ n }}.example.com openshift_hostname="node{{ n }}.example.com" openshift_node_labels="{'region': 'primary', 'zone': 'three', 'env': 'prod'}"
{% endfor %}

{% else %}

master1.example.com openshift_public_hostname="master1-{{ guid }}.oslab.opentlc.com" openshift_hostname="master1.example.com" openshift_schedulable=False
infranode1.example.com openshift_hostname="infranode1.example.com" openshift_node_labels="{'region': 'primary', 'zone': 'default', 'env': 'infra'}"
node1.example.com openshift_hostname="node1.example.com" openshift_node_labels="{'region': 'primary', 'zone': 'one', 'env': 'dev'}"
node2.example.com openshift_hostname="node2.example.com" openshift_node_labels="{'region': 'primary', 'zone': 'two', 'env': 'dev'}"
node3.example.com openshift_hostname="node3.example.com" openshift_node_labels="{'region': 'primary', 'zone': 'three', 'env': 'prod'}"

{% endif %}


